services:
  db:
    image: postgres:alpine
    container_name: db
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - postgres:/var/lib/postgresql/data

  adminer:
    image: adminer
    container_name: adminer
    depends_on:
      - db
    environment:
      - ADMINER_DESIGN=pepa-linha-dark
    ports:
      - "8080:8080"

  backend:
    build: .
    container_name: backend
    depends_on:
      - db
    environment:
      - BCRYPT_SALT_ROUNDS=${BCRYPT_SALT_ROUNDS}
      - JWT_ACTIVATION_SECRET=${JWT_ACTIVATION_SECRET}
      - JWT_ACTIVATION_EXPIRATION=${JWT_ACTIVATION_EXPIRATION}
      - JWT_AUTH_SECRET=${JWT_AUTH_SECRET}
      - JWT_AUTH_EXPIRATION=${JWT_AUTH_EXPIRATION}
      - NODE_ENV=${NODE_ENV}
      - PORT=${BACKEND_PORT}
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    volumes:
      - ./backend:/app

  frontend:
    build: .
    container_name: frontend
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${FRONTEND_PORT}
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    volumes:
      - ./frontend:/app

volumes:
  postgres:
